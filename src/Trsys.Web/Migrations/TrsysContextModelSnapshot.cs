// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trsys.Web.Models;

namespace Trsys.Web.Migrations
{
    [DbContext(typeof(TrsysContext))]
    partial class TrsysContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trsys.Web.Models.Message", b =>
                {
                    b.Property<long>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonMetadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreamIdInternal")
                        .HasColumnType("int");

                    b.Property<int>("StreamVersion")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Position")
                        .HasName("PK_Events");

                    b.HasIndex(new[] { "StreamIdInternal", "Created" }, "IX_Messages_StreamIdInternal_Created");

                    b.HasIndex(new[] { "StreamIdInternal", "Id" }, "IX_Messages_StreamIdInternal_Id")
                        .IsUnique();

                    b.HasIndex(new[] { "StreamIdInternal", "StreamVersion" }, "IX_Messages_StreamIdInternal_Revision")
                        .IsUnique();

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Trsys.Web.Models.ReadModel.Dtos.LogDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Received")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.HasIndex("Received", "Key")
                        .IsClustered();

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Trsys.Web.Models.ReadModel.Dtos.OrderDto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SecretKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TicketNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Trsys.Web.Models.ReadModel.Dtos.SecretKeyDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("KeyType")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.HasIndex("Token");

                    b.ToTable("SecretKeys");
                });

            modelBuilder.Entity("Trsys.Web.Models.ReadModel.Dtos.UserDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Trsys.Web.Models.Stream", b =>
                {
                    b.Property<int>("IdInternal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(42)
                        .IsUnicode(false)
                        .HasColumnType("char(42)")
                        .IsFixedLength(true);

                    b.Property<string>("IdOriginal")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IdOriginalReversed")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComputedColumnSql("(reverse([IdOriginal]))", false);

                    b.Property<int?>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("MaxCount")
                        .HasColumnType("int");

                    b.Property<long>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("((-1))");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.HasKey("IdInternal");

                    b.HasIndex(new[] { "Id" }, "IX_Streams_Id")
                        .IsUnique();

                    b.HasIndex(new[] { "IdOriginal", "IdInternal" }, "IX_Streams_IdOriginal");

                    b.HasIndex(new[] { "IdOriginalReversed", "IdInternal" }, "IX_Streams_IdOriginalReversed");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("Trsys.Web.Models.Message", b =>
                {
                    b.HasOne("Trsys.Web.Models.Stream", "StreamIdInternalNavigation")
                        .WithMany("Messages")
                        .HasForeignKey("StreamIdInternal")
                        .HasConstraintName("FK_Events_Streams")
                        .IsRequired();

                    b.Navigation("StreamIdInternalNavigation");
                });

            modelBuilder.Entity("Trsys.Web.Models.Stream", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
