@using Microsoft.Extensions.Hosting
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
@using Trsys.Models
@using System.Linq
@model Trsys.Web.ViewModels.Admin.IndexViewModel

@{
    ViewBag.Title = "シークレットキー一覧";
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger mb-4">
    @Model.ErrorMessage
</div>
}
@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success mb-4">
    @Model.SuccessMessage
</div>
}

<div class="float-md-end">
    @if (!string.IsNullOrEmpty(Model.EaSiteUrl))
    {
        <a href="@Model.EaSiteUrl">EAのダウンロード</a>
    }
    <a href="@Url.Action("Index", "Logs")">ログ</a>
    <a href="@Url.Action("Index", "Events")">イベント</a>
</div>

<form method="post">
    @if (!string.IsNullOrEmpty(Model.CacheOrderText))
    {
        <h1 class="h2 mb-3 font-weight-bold">注文キャッシュ</h1>
        <div class="mb-4">
            <p>@Model.CacheOrderText</p>
            <button class="btn btn-outline-secondary" formaction="/admin/orders/clear">クリア</button>
        </div>
    }


    <h1 class="h2 mb-3 font-weight-bold">@ViewBag.Title</h1>

    <div class="mb-4 d-lg-flex gap-2 align-items-end">
        <div>
            <label>種類</label>
            <select class="form-control" name="KeyType">
                <option value="">---</option>
                @foreach (var type in Enum.GetValues(typeof(SecretKeyType)).OfType<SecretKeyType>().Concat(new[] {
                (SecretKeyType.Publisher | SecretKeyType.Subscriber) }))
                {
                    if (Model.KeyType.HasValue && Model.KeyType.Value == type)
                    {
                        <option value="@type" selected>@type</option>
                    }
                    else
                    {
                        <option value="@type">@type</option>
                    }
                }
            </select>
        </div>
        <div>
            <label>シークレットキー</label>
            <input class="form-control" type="text" name="Key" value="@Model.Key" />
        </div>
        <div class="d-none d-lg-block">
            <label>説明</label>
            <input class="form-control" type="text" name="Description" value="@Model.Description" />
        </div>
        <div class="mt-2 mt-lg-0">
            <button formaction="/admin/keys/new" class="btn btn-outline-secondary btn-block text-nowrap">シークレットキー生成</button>
        </div>
    </div>
    @if (Model.SecretKeys.Count > 0)
    {
        @if (Model.SecretKeysPerPage < Model.SecretKeysTotalCount)
        {
            <div class="mb-3">
                @if (Model.SecretKeysPage > 1)
                {
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage })">最初のページ</a>
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage, page = Model.SecretKeysPage - 1 == 1 ? default(int?) : Model.SecretKeysPage - 1 })">前のページ</a>
                }
                else
                {
                    <span>最初のページ</span>
                    <span>前のページ</span>
                }
                @if (Model.SecretKeysPage * Model.SecretKeysPerPage < Model.SecretKeysTotalCount)
                {
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage, page = Model.SecretKeysPage + 1 })">次のページ</a>
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage, page = Math.Ceiling(Model.SecretKeysTotalCount / (double)Model.SecretKeysPerPage) })">最後のページ</a>
                }
                else
                {
                    <span>次のページ</span>
                    <span>最後のページ</span>
                }
            </div>
        }
        <div class="table-responsive mb-3">
            <table class="table table-sm table-bordered" style="min-width: 70em">
                <colgroup>
                    <col style="min-width: 12em" />
                    <col style="min-width: 20em" />
                    <col />
                    <col style="min-width: 4em" />
                    <col style="min-width: 4em" />
                    <col style="min-width: 17em" />
                </colgroup>
                <thead>
                    <tr>
                        <th class="text-center">種類</th>
                        <th class="text-center">シークレットキー</th>
                        <th class="text-center">説明</th>
                        <th class="text-center">接続</th>
                        <th class="text-center">状態</th>
                        <th class="text-center"></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.SecretKeys.Count; i++)
                    {
                        var key = Model.SecretKeys[i];
                        <tr class="@(key.IsApproved ? "" : " bg-light")">
                            @if (key.IsApproved)
                            {
                                <td class="align-middle">
                                    @key.KeyType
                                    <input type="hidden" name="SecretKeys[@i].Id" value="@key.Id" />
                                    <input type="hidden" name="SecretKeys[@i].KeyType" value="@key.KeyType" />
                                </td>
                            }
                            else
                            {
                                <td>
                                    <input type="hidden" name="SecretKeys[@i].Id" value="@key.Id" />
                                    <select class="form-control" name="SecretKeys[@i].KeyType">
                                        <option value="">---</option>
                                        @foreach (var type in
                                       Enum.GetValues(typeof(SecretKeyType)).OfType<SecretKeyType>().Concat(new[]
                                       {(SecretKeyType.Publisher | SecretKeyType.Subscriber) }))
                                        {
                                            if (key.KeyType.HasValue && key.KeyType.Value == type)
                                            {
                                                <option value="@type" selected>@type</option>
                                            }
                                            else
                                            {
                                                <option value="@type">@type</option>
                                            }
                                        }
                                    </select>
                                </td>
                            }
                            <td class="align-middle">
                                <div class="secret-key">@key.Key</div>
                                <input type="hidden" name="SecretKeys[@i].Key" value="@key.Key" />
                            </td>
                            <td class="p-1"><input class="form-control" type="text" name="SecretKeys[@i].Description"
                                    value="@key.Description" /></td>
                            <td class="align-middle text-center">@(key.IsConnected ? "○" : "-")</td>
                            @if (key.IsApproved)
                            {
                                <td class="align-middle text-center">有効</td>
                            }
                            else
                            {
                                <td class="align-middle text-center">無効</td>
                            }
                            <td class="p-1">
                                <div class="d-flex gap-1 justify-content-between">
                                    <div class="flex-grow-1">
                                        <button class="btn btn-outline-secondary btn-block w-100"
                                            formaction="/admin/keys/@key.Id/update">変更</button>
                                    </div>
                                    @if (key.IsApproved)
                                    {
                                        <div class="flex-grow-1 mr-1">
                                            <button class="btn btn-outline-secondary btn-block w-100"
                                                formaction="/admin/keys/@key.Id/revoke">無効化</button>
                                        </div>
                                        <div class="flex-grow-1">
                                            <button class="btn btn-outline-secondary btn-block w-100"
                                                formaction="/admin/keys/@key.Id/delete" disabled>削除</button>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="flex-grow-1 mr-1">
                                            @if (key.KeyType.HasValue)
                                            {
                                                <button class="btn btn-outline-secondary btn-block w-100"
                                                    formaction="/admin/keys/@key.Id/approve">有効化</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-outline-secondary btn-block w-100"
                                                    formaction="/admin/keys/@key.Id/approve" disabled>有効化</button>
                                            }
                                        </div>
                                        <div class="flex-grow-1">
                                            <button class="btn btn-outline-secondary btn-block w-100"
                                                formaction="/admin/keys/@key.Id/delete">削除</button>
                                        </div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (Model.SecretKeysPerPage < Model.SecretKeysTotalCount)
        {
            <div class="mb-3">
                @if (Model.SecretKeysPage > 1)
                {
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage })">最初のページ</a>
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage, page = Model.SecretKeysPage - 1 == 1 ? default(int?) : Model.SecretKeysPage - 1 })">前のページ</a>
                }
                else
                {
                    <span>最初のページ</span>
                    <span>前のページ</span>
                }
                @if (Model.SecretKeysPage * Model.SecretKeysPerPage < Model.SecretKeysTotalCount)
                {
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage, page = Model.SecretKeysPage + 1 })">次のページ</a>
                    <a
                        href="@Url.Action("Index", new { perPage = Model.SecretKeysPerPage == 20 ? default(int?) : Model.SecretKeysPerPage, page = Math.Ceiling(Model.SecretKeysTotalCount / (double)Model.SecretKeysPerPage) })">最後のページ</a>
                }
                else
                {
                    <span>次のページ</span>
                    <span>最後のページ</span>
                }
            </div>
        }
    }
    else
    {
        <p>使用可能なシークレットキーはありません。</p>
    }

    @if (env.IsDevelopment())
    {
        <div>
            <h2>新規注文</h2>
            <div class="mb-4 d-lg-flex gap-2 align-items-end">
                <div>
                    <label>シークレットキー</label>
                    <input class="form-control" type="text" name="NewOrderSecretKey" value="@Model.NewOrderSecretKey" />
                </div>
                <div>
                    <label>チケットNo</label>
                    <input class="form-control" type="text" name="NewOrderTicketNo" value="@Model.NewOrderTicketNo" />
                </div>
                <div>
                    <label>通貨ペア</label>
                    <input class="form-control" type="text" name="NewOrderSymbol" value="@Model.NewOrderSymbol" />
                </div>
                <div>
                    <label>取引</label>
                    <select class="form-control" name="NewOrderType">
                        <option value="">---</option>
                        <option value="@OrderType.Buy" @(Model.NewOrderType == OrderType.Buy ? "selected" : "")>BUY</option>
                        <option value="@OrderType.Sell" @(Model.NewOrderType == OrderType.Sell ? "selected" : "")>SELL
                        </option>
                    </select>
                </div>
                <div>
                    <label>価格</label>
                    <input class="form-control" type="text" name="NewOrderPrice" value="@Model.NewOrderPrice" />
                </div>
                <div class="mt-2 mt-lg-0">
                    <button class="btn btn-outline-secondary btn-block text-nowrap" formaction="/admin/orders/new">注文生成</button>
                </div>
            </div>
        </div>

        <div>
            <h2>注文削除</h2>
            <div class="mb-4 d-lg-flex gap-2 align-items-end">
                <div>
                    <label>シークレットキー</label>
                    <input class="form-control" type="text" name="CloseOrderSecretKey" value="@Model.CloseOrderSecretKey" />
                </div>
                <div>
                    <label>チケットNo</label>
                    <input class="form-control" type="text" name="CloseOrderTicketNo" value="@Model.CloseOrderTicketNo" />
                </div>
                <div class="mt-2 mt-lg-0">
                    <button class="btn btn-outline-secondary btn-block text-nowrap" formaction="/admin/orders/close">注文削除</button>
                </div>
            </div>
        </div>
    }
</form>
