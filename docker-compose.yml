version: "3.5"

services:
  nginx:
    image: nginx
    volumes:
      - ./docker/nginx/create_ssl.sh:/docker-entrypoint.d/create_ssl.sh
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 5001:443
      - 5000:80
      # - 8080:80
      # - 8443:443
    depends_on:
      - app1
      - app2
  app1:
    image: mcr.microsoft.com/dotnet/sdk:5.0
    working_dir: /app
    command: dotnet run --project src/Trsys.Web/Trsys.Web.csproj
    volumes:
      - .:/app
    environment:
      - ConnectionStrings:SqlServerConnection=Persist Security Info=False;User ID=sa;Password=P@ssw0rd;Initial Catalog=TrsysDatabase;Server=db
      - ConnectionStrings:RedisConnection=redis
    depends_on:
      - db
      - redis
  app2:
    image: mcr.microsoft.com/dotnet/sdk:5.0
    working_dir: /app
    command: dotnet run --project src/Trsys.Web/Trsys.Web.csproj
    volumes:
      - .:/app
    environment:
      - ConnectionStrings:SqlServerConnection=Persist Security Info=False;User ID=sa;Password=P@ssw0rd;Initial Catalog=TrsysDatabase;Server=db
      - ConnectionStrings:RedisConnection=redis
    depends_on:
      - db
      - redis
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd
    volumes:
      - ./docker/sqlserver/data:/var/opt/mssql/data
      - ./docker/sqlserver/log:/var/opt/mssql/log
      - ./docker/sqlserver/secrets:/var/opt/mssql/secrets
    ports:
      - 1433:1433
  redis:
    image: redis
    ports:
      - 6379:6379
